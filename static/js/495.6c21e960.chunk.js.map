{"version":3,"file":"static/js/495.6c21e960.chunk.js","mappings":"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","sources":["Leaderboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport config from './config';\r\nimport './Leaderboard.css';\r\n\r\n/**\r\n * LEADERBOARD PAGE - Top Users by Reputation\r\n * Shows rankings, badges, and reputation points\r\n */\r\n\r\nconst Leaderboard = () => {\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(localStorage.getItem('agoraUser') || 'null');\r\n\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [userRank, setUserRank] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchLeaderboard();\r\n    if (user) {\r\n      fetchUserRank();\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchLeaderboard = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${config.API_URL}/api/leaderboard?limit=100`);\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch leaderboard');\r\n      \r\n      const data = await response.json();\r\n      setLeaderboard(data.leaderboard || []);\r\n    } catch (err) {\r\n      console.error('Error fetching leaderboard:', err);\r\n      setError('Failed to load leaderboard');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchUserRank = async () => {\r\n    try {\r\n      const response = await fetch(`${config.API_URL}/api/reputation/${user.id}/rank`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUserRank(data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching user rank:', err);\r\n    }\r\n  };\r\n\r\n  const getLevelColor = (level) => {\r\n    const colors = {\r\n      'Novice': '#8b949e',\r\n      'Apprentice': '#cd7f32',\r\n      'Scholar': '#c0c0c0',\r\n      'Master': '#d4af37',\r\n      'Sage': '#b9f2ff',\r\n      'Oracle': '#ff69b4'\r\n    };\r\n    return colors[level] || '#8b949e';\r\n  };\r\n\r\n  const getLevelIcon = (level) => {\r\n    const icons = {\r\n      'Novice': '🌱',\r\n      'Apprentice': '📚',\r\n      'Scholar': '🎓',\r\n      'Master': '🧙',\r\n      'Sage': '🧙‍♂️',\r\n      'Oracle': '🔮'\r\n    };\r\n    return icons[level] || '🌱';\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      className=\"leaderboard-page\"\r\n    >\r\n      <div className=\"leaderboard-container\">\r\n        {/* Header */}\r\n        <div className=\"leaderboard-header\">\r\n          <h1 className=\"leaderboard-title\">\r\n            🏆 Leaderboard\r\n            <span className=\"title-greek\">Ἀγών</span>\r\n          </h1>\r\n          <p className=\"leaderboard-subtitle\">\r\n            The most distinguished philosophers of the Agora\r\n          </p>\r\n        </div>\r\n\r\n        {/* User's Own Rank Card */}\r\n        {userRank && (\r\n          <motion.div\r\n            className=\"user-rank-card\"\r\n            initial={{ y: -20, opacity: 0 }}\r\n            animate={{ y: 0, opacity: 1 }}\r\n          >\r\n            <div className=\"rank-badge\">#{userRank.rank || '—'}</div>\r\n            <div className=\"rank-info\">\r\n              <h3>{user.username}</h3>\r\n              <div className=\"rank-stats\">\r\n                <span className=\"stat\">\r\n                  ⭐ {userRank.points} points\r\n                </span>\r\n                <span className=\"stat\">\r\n                  📊 Top {userRank.percentile}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Loading State */}\r\n        {loading ? (\r\n          <div className=\"loading-state\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Loading rankings...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"error-state\">\r\n            <span className=\"error-icon\">⚠️</span>\r\n            <p>{error}</p>\r\n          </div>\r\n        ) : leaderboard.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <span className=\"empty-icon\">🏛️</span>\r\n            <h3>No Rankings Yet</h3>\r\n            <p>Be the first to earn reputation by creating discussions!</p>\r\n            <button \r\n              className=\"cta-button\"\r\n              onClick={() => navigate('/dashboard')}\r\n            >\r\n              Create Discussion\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Top 3 Podium */}\r\n            {leaderboard.length >= 3 && (\r\n              <div className=\"podium\">\r\n                {/* 2nd Place */}\r\n                <motion.div\r\n                  className=\"podium-position second\"\r\n                  initial={{ y: 50, opacity: 0 }}\r\n                  animate={{ y: 0, opacity: 1 }}\r\n                  transition={{ delay: 0.2 }}\r\n                >\r\n                  <div className=\"position-medal\">🥈</div>\r\n                  <div className=\"position-avatar\">\r\n                    {leaderboard[1].top_badges || '👤'}\r\n                  </div>\r\n                  <h3 className=\"position-name\">{leaderboard[1].username}</h3>\r\n                  <div \r\n                    className=\"position-level\"\r\n                    style={{ color: getLevelColor(leaderboard[1].level) }}\r\n                  >\r\n                    {getLevelIcon(leaderboard[1].level)} {leaderboard[1].level}\r\n                  </div>\r\n                  <div className=\"position-points\">\r\n                    ⭐ {leaderboard[1].points.toLocaleString()} pts\r\n                  </div>\r\n                  <div className=\"position-badges\">\r\n                    {leaderboard[1].badge_count} badges\r\n                  </div>\r\n                </motion.div>\r\n\r\n                {/* 1st Place */}\r\n                <motion.div\r\n                  className=\"podium-position first\"\r\n                  initial={{ y: 50, opacity: 0 }}\r\n                  animate={{ y: 0, opacity: 1 }}\r\n                  transition={{ delay: 0.1 }}\r\n                >\r\n                  <div className=\"position-medal\">🥇</div>\r\n                  <div className=\"crown\">👑</div>\r\n                  <div className=\"position-avatar\">\r\n                    {leaderboard[0].top_badges || '👤'}\r\n                  </div>\r\n                  <h3 className=\"position-name\">{leaderboard[0].username}</h3>\r\n                  <div \r\n                    className=\"position-level\"\r\n                    style={{ color: getLevelColor(leaderboard[0].level) }}\r\n                  >\r\n                    {getLevelIcon(leaderboard[0].level)} {leaderboard[0].level}\r\n                  </div>\r\n                  <div className=\"position-points\">\r\n                    ⭐ {leaderboard[0].points.toLocaleString()} pts\r\n                  </div>\r\n                  <div className=\"position-badges\">\r\n                    {leaderboard[0].badge_count} badges\r\n                  </div>\r\n                </motion.div>\r\n\r\n                {/* 3rd Place */}\r\n                <motion.div\r\n                  className=\"podium-position third\"\r\n                  initial={{ y: 50, opacity: 0 }}\r\n                  animate={{ y: 0, opacity: 1 }}\r\n                  transition={{ delay: 0.3 }}\r\n                >\r\n                  <div className=\"position-medal\">🥉</div>\r\n                  <div className=\"position-avatar\">\r\n                    {leaderboard[2].top_badges || '👤'}\r\n                  </div>\r\n                  <h3 className=\"position-name\">{leaderboard[2].username}</h3>\r\n                  <div \r\n                    className=\"position-level\"\r\n                    style={{ color: getLevelColor(leaderboard[2].level) }}\r\n                  >\r\n                    {getLevelIcon(leaderboard[2].level)} {leaderboard[2].level}\r\n                  </div>\r\n                  <div className=\"position-points\">\r\n                    ⭐ {leaderboard[2].points.toLocaleString()} pts\r\n                  </div>\r\n                  <div className=\"position-badges\">\r\n                    {leaderboard[2].badge_count} badges\r\n                  </div>\r\n                </motion.div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Full Rankings Table */}\r\n            <div className=\"rankings-table\">\r\n              <h2 className=\"section-title\">Full Rankings</h2>\r\n              <div className=\"table-container\">\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"rank-col\">Rank</th>\r\n                      <th className=\"user-col\">Philosopher</th>\r\n                      <th className=\"level-col\">Level</th>\r\n                      <th className=\"points-col\">Points</th>\r\n                      <th className=\"badges-col\">Badges</th>\r\n                      <th className=\"stats-col\">Stats</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {leaderboard.map((entry, index) => (\r\n                      <motion.tr\r\n                        key={entry.user_id}\r\n                        className={entry.user_id === user?.id ? 'current-user' : ''}\r\n                        initial={{ opacity: 0, x: -20 }}\r\n                        animate={{ opacity: 1, x: 0 }}\r\n                        transition={{ delay: index * 0.05 }}\r\n                        onClick={() => navigate(`/profile/${entry.user_id}`)}\r\n                      >\r\n                        <td className=\"rank-col\">\r\n                          <span className=\"rank-number\">\r\n                            {entry.leaderboard_rank}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"user-col\">\r\n                          <div className=\"user-info\">\r\n                            <span className=\"user-avatar\">\r\n                              {entry.top_badges || '👤'}\r\n                            </span>\r\n                            <span className=\"username\">{entry.username}</span>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"level-col\">\r\n                          <span \r\n                            className=\"level-badge\"\r\n                            style={{ \r\n                              backgroundColor: getLevelColor(entry.level) + '20',\r\n                              color: getLevelColor(entry.level)\r\n                            }}\r\n                          >\r\n                            {getLevelIcon(entry.level)} {entry.level}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"points-col\">\r\n                          <span className=\"points\">\r\n                            ⭐ {entry.points.toLocaleString()}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"badges-col\">\r\n                          <span className=\"badge-count\">\r\n                            🏆 {entry.badge_count}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"stats-col\">\r\n                          <div className=\"user-stats\">\r\n                            <span>📝 {entry.posts_count}</span>\r\n                            <span>👍 {entry.upvotes_received}</span>\r\n                          </div>\r\n                        </td>\r\n                      </motion.tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"names":["Leaderboard","navigate","useNavigate","user","JSON","parse","localStorage","getItem","leaderboard","setLeaderboard","useState","userRank","setUserRank","loading","setLoading","error","setError","useEffect","fetchLeaderboard","fetchUserRank","async","response","fetch","concat","config","API_URL","ok","Error","data","json","err","console","id","getLevelColor","level","getLevelIcon","_jsx","motion","div","initial","opacity","animate","exit","className","children","_jsxs","y","rank","username","points","percentile","length","onClick","_Fragment","transition","delay","top_badges","style","color","toLocaleString","badge_count","map","entry","index","tr","user_id","x","leaderboard_rank","backgroundColor","posts_count","upvotes_received"],"sourceRoot":""}