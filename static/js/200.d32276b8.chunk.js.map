{"version":3,"file":"static/js/200.d32276b8.chunk.js","mappings":"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","sources":["components/AnimatedCounter.js","Profile.js"],"sourcesContent":["// ═══════════════════════════════════════════════════════════════════\r\n// ANIMATED COUNTER COMPONENT\r\n// Numbers that count up when scrolled into view\r\n// ═══════════════════════════════════════════════════════════════════\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useScrollReveal } from '../animations/ScrollReveal';\r\n\r\nconst AnimatedCounter = ({ \r\n  end, \r\n  duration = 2000, \r\n  prefix = '', \r\n  suffix = '',\r\n  className = '' \r\n}) => {\r\n  const [count, setCount] = useState(0);\r\n  const [ref, isVisible] = useScrollReveal({ once: true, threshold: 0.3 });\r\n  const hasAnimated = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (isVisible && !hasAnimated.current) {\r\n      hasAnimated.current = true;\r\n      let startTime;\r\n      let animationFrame;\r\n\r\n      const animate = (currentTime) => {\r\n        if (!startTime) startTime = currentTime;\r\n        const progress = Math.min((currentTime - startTime) / duration, 1);\r\n        \r\n        // Easing function for smooth animation\r\n        const easeOutQuart = 1 - Math.pow(1 - progress, 4);\r\n        setCount(Math.floor(easeOutQuart * end));\r\n\r\n        if (progress < 1) {\r\n          animationFrame = requestAnimationFrame(animate);\r\n        }\r\n      };\r\n\r\n      animationFrame = requestAnimationFrame(animate);\r\n\r\n      return () => {\r\n        if (animationFrame) {\r\n          cancelAnimationFrame(animationFrame);\r\n        }\r\n      };\r\n    }\r\n  }, [isVisible, end, duration]);\r\n\r\n  return (\r\n    <span ref={ref} className={className}>\r\n      {prefix}{count.toLocaleString()}{suffix}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default AnimatedCounter;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Profile-Greek.css';\r\nimport Toast from './components/Toast';\r\nimport ScrollProgress from './components/ScrollProgress';\r\nimport AnimatedCounter from './components/AnimatedCounter';\r\nimport config from './config';\r\n\r\nfunction Profile() {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('agoraUser') || '{}'));\r\n  const [discussions, setDiscussions] = useState([]);\r\n  // const [loading, setLoading] = useState(true); // Removed unused variable\r\n  const [toast, setToast] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('mosaic'); // mosaic, lineage, virtues, footprint, journal\r\n  const [editData, setEditData] = useState({\r\n    username: user.username || '',\r\n    tagline: user.tagline || '',\r\n  });\r\n  \r\n  // Virtue scores (can be calculated from user activity)\r\n  const [virtueScores, setVirtueScores] = useState({\r\n    wisdom: 75,\r\n    courage: 60,\r\n    temperance: 85,\r\n    justice: 70\r\n  });\r\n  \r\n  // Belief evolution data\r\n  const [beliefHistory, setBeliefHistory] = useState(() => {\r\n    const saved = localStorage.getItem(`beliefHistory_${user.userId}`);\r\n    return saved ? JSON.parse(saved) : [\r\n      { id: 1, belief: 'Agnostic', date: '2024-01-15', reason: 'Initial stance' },\r\n      { id: 2, belief: 'Skeptical Empiricist', date: '2024-06-20', reason: 'After studying epistemology' },\r\n      { id: 3, belief: user.belief || 'Agnostic', date: '2024-10-27', reason: 'Current position' }\r\n    ];\r\n  });\r\n  \r\n  // Belief modal state\r\n  const [showBeliefModal, setShowBeliefModal] = useState(false);\r\n  const [editingBelief, setEditingBelief] = useState(null);\r\n  const [beliefForm, setBeliefForm] = useState({\r\n    belief: '',\r\n    reason: '',\r\n    date: new Date().toISOString().split('T')[0]\r\n  });\r\n  \r\n  // Philosopher modal state\r\n  const [selectedPhilosopher, setSelectedPhilosopher] = useState(null);\r\n  \r\n  // Journal entries\r\n  const [journalEntries, setJournalEntries] = useState(() => {\r\n    const saved = localStorage.getItem(`journal_${user.userId}`);\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n  const [currentJournalText, setCurrentJournalText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!user.userId) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    fetchUserDiscussions();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const fetchUserDiscussions = async () => {\r\n    // setLoading(true); // Removed - loading state not needed\r\n    try {\r\n      const res = await fetch(`${config.API_URL}/discussions`);\r\n      const data = await res.json();\r\n\r\n      if (res.ok && Array.isArray(data)) {\r\n        // Filter discussions by current user\r\n        const userDiscussions = data.filter(disc => disc.user_id === user.userId);\r\n        setDiscussions(userDiscussions);\r\n      } else {\r\n        // No discussions or error response\r\n        setDiscussions([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching discussions:', error);\r\n      setDiscussions([]);\r\n    }\r\n    // finally {\r\n    //   setLoading(false); // Removed - loading state not needed\r\n    // }\r\n  };\r\n\r\n  const handleSaveProfile = () => {\r\n    // Update localStorage\r\n    const updatedUser = { ...user, ...editData };\r\n    localStorage.setItem('agoraUser', JSON.stringify(updatedUser));\r\n    setUser(updatedUser);\r\n    setEditMode(false);\r\n    setToast({ message: 'Profile updated successfully!', type: 'success' });\r\n  };\r\n\r\n  // Removed unused handleLogout function - using navbar logout instead\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', { \r\n      month: 'short', \r\n      day: 'numeric', \r\n      year: 'numeric'\r\n    });\r\n  };\r\n  \r\n  // Calculate virtue from activity - Memoized to prevent unnecessary recalculations\r\n  useEffect(() => {\r\n    if (discussions.length > 0) {\r\n      const totalReplies = discussions.reduce((acc, d) => acc + (d.replies || 0), 0);\r\n      const totalViews = discussions.reduce((acc, d) => acc + (d.views || 0), 0);\r\n      \r\n      // Only update if values actually changed\r\n      const newScores = {\r\n        wisdom: Math.min(100, 50 + discussions.length * 5),\r\n        courage: Math.min(100, 40 + totalReplies * 2),\r\n        temperance: Math.min(100, 60 + (discussions.length * 3)),\r\n        justice: Math.min(100, 55 + Math.floor(totalViews / 10))\r\n      };\r\n      \r\n      // Prevent unnecessary re-renders\r\n      setVirtueScores(prev => {\r\n        if (JSON.stringify(prev) === JSON.stringify(newScores)) return prev;\r\n        return newScores;\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [discussions.length]); // Only re-run when discussion count changes\r\n  \r\n  // Belief Management Functions\r\n  const handleAddBelief = () => {\r\n    setEditingBelief(null);\r\n    setBeliefForm({\r\n      belief: '',\r\n      reason: '',\r\n      date: new Date().toISOString().split('T')[0]\r\n    });\r\n    setShowBeliefModal(true);\r\n  };\r\n  \r\n  const handleEditBelief = (belief) => {\r\n    setEditingBelief(belief);\r\n    setBeliefForm({\r\n      belief: belief.belief,\r\n      reason: belief.reason,\r\n      date: belief.date\r\n    });\r\n    setShowBeliefModal(true);\r\n  };\r\n  \r\n  const handleSaveBelief = () => {\r\n    if (!beliefForm.belief.trim()) {\r\n      setToast({ message: 'Please enter a belief', type: 'error' });\r\n      return;\r\n    }\r\n    \r\n    let updatedHistory;\r\n    if (editingBelief) {\r\n      updatedHistory = beliefHistory.map(b => \r\n        b.id === editingBelief.id ? { ...beliefForm, id: b.id } : b\r\n      );\r\n      setToast({ message: 'Belief updated successfully!', type: 'success' });\r\n    } else {\r\n      const newBelief = {\r\n        ...beliefForm,\r\n        id: Date.now()\r\n      };\r\n      updatedHistory = [...beliefHistory, newBelief];\r\n      setToast({ message: 'New belief added!', type: 'success' });\r\n    }\r\n    \r\n    setBeliefHistory(updatedHistory);\r\n    localStorage.setItem(`beliefHistory_${user.userId}`, JSON.stringify(updatedHistory));\r\n    setShowBeliefModal(false);\r\n  };\r\n  \r\n  const handleDeleteBelief = (beliefId) => {\r\n    if (window.confirm('Are you sure you want to remove this belief from your mosaic?')) {\r\n      const updatedHistory = beliefHistory.filter(b => b.id !== beliefId);\r\n      setBeliefHistory(updatedHistory);\r\n      localStorage.setItem(`beliefHistory_${user.userId}`, JSON.stringify(updatedHistory));\r\n      setToast({ message: 'Belief removed from mosaic', type: 'success' });\r\n    }\r\n  };\r\n  \r\n  // Philosopher Data\r\n  const philosophers = {\r\n    socrates: {\r\n      name: 'Socrates',\r\n      icon: '🗿',\r\n      dates: '470-399 BCE',\r\n      school: 'Classical Greek Philosophy',\r\n      bio: 'Father of Western philosophy, known for the Socratic method of questioning to stimulate critical thinking.',\r\n      keyIdeas: ['Know thyself', 'The unexamined life is not worth living', 'I know that I know nothing'],\r\n      influence: 'Pioneered dialectic reasoning and ethical inquiry'\r\n    },\r\n    plato: {\r\n      name: 'Plato',\r\n      icon: '🎭',\r\n      dates: '428-348 BCE',\r\n      school: 'Platonism',\r\n      bio: 'Student of Socrates, founded the Academy in Athens. Developed theory of Forms and ideal state.',\r\n      keyIdeas: ['Theory of Forms', 'Allegory of the Cave', 'The Republic'],\r\n      influence: 'Laid foundation for Western philosophy and political theory'\r\n    },\r\n    aristotle: {\r\n      name: 'Aristotle',\r\n      icon: '📖',\r\n      dates: '384-322 BCE',\r\n      school: 'Aristotelianism',\r\n      bio: 'Student of Plato, tutor to Alexander the Great. Systematized logic and natural sciences.',\r\n      keyIdeas: ['Golden Mean', 'Four Causes', 'Virtue Ethics'],\r\n      influence: 'Shaped medieval scholarship and scientific method'\r\n    },\r\n    epicurus: {\r\n      name: 'Epicurus',\r\n      icon: '🌿',\r\n      dates: '341-270 BCE',\r\n      school: 'Epicureanism',\r\n      bio: 'Founded school teaching that pleasure and absence of pain are the greatest goods.',\r\n      keyIdeas: ['Atomic theory', 'Pleasure as the good', 'Absence of fear'],\r\n      influence: 'Influenced modern scientific materialism'\r\n    }\r\n  };\r\n  \r\n  // Journal Functions\r\n  const handleSaveJournal = () => {\r\n    if (!currentJournalText.trim()) {\r\n      setToast({ message: 'Please write something first', type: 'error' });\r\n      return;\r\n    }\r\n    \r\n    const newEntry = {\r\n      id: Date.now(),\r\n      text: currentJournalText,\r\n      date: new Date().toISOString(),\r\n      published: false\r\n    };\r\n    \r\n    const updatedEntries = [newEntry, ...journalEntries];\r\n    setJournalEntries(updatedEntries);\r\n    localStorage.setItem(`journal_${user.userId}`, JSON.stringify(updatedEntries));\r\n    setCurrentJournalText('');\r\n    setToast({ message: 'Journal entry saved!', type: 'success' });\r\n  };\r\n  \r\n  const handlePublishJournal = () => {\r\n    if (!currentJournalText.trim()) {\r\n      setToast({ message: 'Please write something to publish', type: 'error' });\r\n      return;\r\n    }\r\n    setToast({ message: 'Journal published as discussion! (Feature coming soon)', type: 'success' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\r\n      <ScrollProgress />\r\n      \r\n      <div className=\"profile-page philosophical-portrait\">\r\n        {/* Laurel Wreath Decorations */}\r\n        <div className=\"laurel-decoration laurel-left\">🌿</div>\r\n        <div className=\"laurel-decoration laurel-right\">🌿</div>\r\n        \r\n        <div className=\"profile-container\">\r\n          {/* Profile Header - Marble Tablet */}\r\n          <div className=\"profile-header marble-relief\">\r\n            {/* Ornate Frieze Border */}\r\n            <div className=\"frieze-pattern top\"></div>\r\n            \r\n            {/* Profile Avatar with Laurel Wreath */}\r\n            <div className=\"profile-avatar-section\">\r\n              <div className=\"laurel-wreath-border\">\r\n                <div className=\"profile-avatar-large\">\r\n                  <div className=\"owl-icon\">🦉</div>\r\n                  <div className=\"avatar-circle\">\r\n                    <span className=\"avatar-initial\">{user.username?.charAt(0).toUpperCase() || 'Φ'}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"profile-info-header\">\r\n              {editMode ? (\r\n                <>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"edit-input engraved-input\"\r\n                    value={editData.username}\r\n                    onChange={(e) => setEditData({ ...editData, username: e.target.value })}\r\n                    placeholder=\"Your name\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"edit-input engraved-input\"\r\n                    value={editData.tagline}\r\n                    onChange={(e) => setEditData({ ...editData, tagline: e.target.value })}\r\n                    placeholder=\"Your philosophical motto\"\r\n                  />\r\n                  <div className=\"edit-buttons\">\r\n                    <button className=\"save-btn classical-btn\" onClick={handleSaveProfile}>\r\n                      <span className=\"btn-icon\">âœ“</span> Save Changes\r\n                    </button>\r\n                    <button className=\"cancel-btn classical-btn\" onClick={() => setEditMode(false)}>\r\n                      <span className=\"btn-icon\">âœ•</span> Cancel\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <h1 className=\"marble-engraved\">{user.username}</h1>\r\n                  <p className=\"philosopher-title\">{user.tagline || 'A seeker of wisdom in the Agora'}</p>\r\n                  <div className=\"philosophical-badges\">\r\n                    <span className=\"badge-item\"><span className=\"icon\">🏛️</span> Philosopher</span>\r\n                    <span className=\"badge-item\"><span className=\"icon\">📜</span> {discussions.length} Scrolls</span>\r\n                    <span className=\"badge-item\"><span className=\"icon\">⚖️</span> {user.belief || 'Truth Seeker'}</span>\r\n                  </div>\r\n                  <button className=\"edit-profile-btn classical-btn\" onClick={() => setEditMode(true)}>\r\n                    <span className=\"btn-icon\">âœï¸</span> Edit Portrait\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"frieze-pattern bottom\"></div>\r\n          </div>\r\n\r\n          {/* Navigation Tabs - Greek Columns */}\r\n          <div className=\"profile-tabs temple-columns\">\r\n            <button \r\n              className={`tab-column ${activeTab === 'mosaic' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('mosaic')}\r\n            >\r\n              <span className=\"column-capital\">🏛️</span>\r\n              <span className=\"column-label\">Belief Mosaic</span>\r\n            </button>\r\n            <button \r\n              className={`tab-column ${activeTab === 'lineage' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('lineage')}\r\n            >\r\n              <span className=\"column-capital\">🌳</span>\r\n              <span className=\"column-label\">Intellectual Lineage</span>\r\n            </button>\r\n            <button \r\n              className={`tab-column ${activeTab === 'virtues' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('virtues')}\r\n            >\r\n              <span className=\"column-capital\">⚖️</span>\r\n              <span className=\"column-label\">Virtue Scoreboard</span>\r\n            </button>\r\n            <button \r\n              className={`tab-column ${activeTab === 'footprint' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('footprint')}\r\n            >\r\n              <span className=\"column-capital\">👣</span>\r\n              <span className=\"column-label\">Agora Footprint</span>\r\n            </button>\r\n            <button \r\n              className={`tab-column ${activeTab === 'journal' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('journal')}\r\n            >\r\n              <span className=\"column-capital\">📜</span>\r\n              <span className=\"column-label\">Thought Journal</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Tab Content */}\r\n          <div className=\"profile-content-area\">\r\n            \r\n            {/* 1. BELIEF MOSAIC */}\r\n            {activeTab === 'mosaic' && (\r\n              <div className=\"belief-mosaic-section animated-entrance\">\r\n                <h2 className=\"section-title\">\r\n                  <span className=\"title-icon\">🎨</span>\r\n                  Your Philosophical Mosaic\r\n                  <span className=\"subtitle-greek\">μωσαϊκό της Σοφίας</span>\r\n                </h2>\r\n                \r\n                <div className=\"mosaic-grid\">\r\n                  {beliefHistory.map((item, index) => (\r\n                    <div key={item.id} className=\"mosaic-tile tessera scroll-reveal hover-lift\" style={{animationDelay: `${index * 0.1}s`}}>\r\n                      <div className=\"tile-header\">\r\n                        <span className=\"tile-icon\">🏺</span>\r\n                        <span className=\"tile-date\">{formatDate(item.date)}</span>\r\n                      </div>\r\n                      <h3 className=\"tile-belief\">{item.belief}</h3>\r\n                      <p className=\"tile-reason\">{item.reason}</p>\r\n                      <div className=\"tile-divider\"></div>\r\n                      <div className=\"tile-actions\">\r\n                        <button \r\n                          className=\"tile-edit-btn ripple-button\" \r\n                          onClick={() => handleEditBelief(item)}\r\n                          title=\"Edit belief\"\r\n                        >\r\n                          âœï¸\r\n                        </button>\r\n                        <button \r\n                          className=\"tile-delete-btn ripple-button\" \r\n                          onClick={() => handleDeleteBelief(item.id)}\r\n                          title=\"Remove belief\"\r\n                        >\r\n                          🗑️\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  \r\n                  <div className=\"mosaic-tile add-belief tessera scroll-reveal hover-lift\">\r\n                    <button className=\"add-belief-btn ripple-button\" onClick={handleAddBelief}>\r\n                      <span className=\"add-icon\">âž•</span>\r\n                      <span>Add New Belief</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"belief-sculptor-section\">\r\n                  <h3 className=\"sculptor-title\">\r\n                    <span className=\"icon\">🔨</span> Belief Sculptor\r\n                  </h3>\r\n                  <p className=\"sculptor-desc\">Shape and refine your philosophical stance with historical context</p>\r\n                  <div className=\"sculptor-current\">\r\n                    <label>Current Belief:</label>\r\n                    <div className=\"belief-display\">{user.belief || 'Not specified'}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* 2. INTELLECTUAL LINEAGE */}\r\n            {activeTab === 'lineage' && (\r\n              <div className=\"lineage-section animated-entrance\">\r\n                <h2 className=\"section-title\">\r\n                  <span className=\"title-icon\">🌳</span>\r\n                  Your Intellectual Lineage\r\n                  <span className=\"subtitle-greek\">Δένδρο της Γνώσης</span>\r\n                </h2>\r\n                \r\n                <div className=\"lineage-tree\">\r\n                  <div className=\"tree-branch\">\r\n                    <h3 className=\"branch-title\">\r\n                      <span className=\"branch-icon\">📚</span> Dialogues Joined\r\n                    </h3>\r\n                    <div className=\"branch-count\">{discussions.length}</div>\r\n                  </div>\r\n                  \r\n                  <div className=\"tree-branch\">\r\n                    <h3 className=\"branch-title\">\r\n                      <span className=\"branch-icon\">💭</span> Ideas Challenged\r\n                    </h3>\r\n                    <div className=\"branch-count\">{discussions.reduce((acc, d) => acc + (d.replies || 0), 0)}</div>\r\n                  </div>\r\n                  \r\n                  <div className=\"tree-branch\">\r\n                    <h3 className=\"branch-title\">\r\n                      <span className=\"branch-icon\">âœ¨</span> Virtues Explored\r\n                    </h3>\r\n                    <div className=\"branch-count\">{(user.categories || []).length}</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"influenced-by-section\">\r\n                  <h3 className=\"influence-title\">Influenced By</h3>\r\n                  <div className=\"philosopher-icons\">\r\n                    {Object.keys(philosophers).map((key, index) => {\r\n                      const phil = philosophers[key];\r\n                      return (\r\n                        <div \r\n                          key={key}\r\n                          className=\"philosopher-card clickable scroll-reveal hover-lift\" \r\n                          style={{ animationDelay: `${index * 0.1}s` }}\r\n                          onClick={() => setSelectedPhilosopher(phil)}\r\n                          title={`Learn about ${phil.name}`}\r\n                        >\r\n                          <div className=\"philosopher-bust\">{phil.icon}</div>\r\n                          <span>{phil.name}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* 3. VIRTUE SCOREBOARD */}\r\n            {activeTab === 'virtues' && (\r\n              <div className=\"virtue-section animated-entrance\">\r\n                <h2 className=\"section-title\">\r\n                  <span className=\"title-icon\">âš–ï¸</span>\r\n                  Virtue Scoreboard\r\n                  <span className=\"subtitle-greek\">Î Î¯Î½Î±ÎºÎ±Ï‚ Î‘ÏÎµÏ„ÏŽÎ½</span>\r\n                </h2>\r\n                \r\n                <p className=\"virtue-description\">\r\n                  Track your philosophical virtues through thoughtful engagement, balanced debate, and reflective practice.\r\n                </p>\r\n                \r\n                <div className=\"virtues-grid\">\r\n                  <div className=\"virtue-card wisdom scroll-reveal hover-lift\">\r\n                    <div className=\"virtue-icon\">🦉</div>\r\n                    <h3 className=\"virtue-name\">Wisdom</h3>\r\n                    <p className=\"virtue-greek\">Σοφία</p>\r\n                    <div className=\"virtue-bar\">\r\n                      <div className=\"virtue-progress\" style={{width: `${virtueScores.wisdom}%`}}></div>\r\n                    </div>\r\n                    <p className=\"virtue-score\"><AnimatedCounter end={virtueScores.wisdom} />%</p>\r\n                  </div>\r\n                  \r\n                  <div className=\"virtue-card courage scroll-reveal hover-lift\" style={{ animationDelay: '0.1s' }}>\r\n                    <div className=\"virtue-icon\">âš”ï¸</div>\r\n                    <h3 className=\"virtue-name\">Courage</h3>\r\n                    <p className=\"virtue-greek\">Î‘Î½Î´ÏÎµÎ¯Î±</p>\r\n                    <div className=\"virtue-bar\">\r\n                      <div className=\"virtue-progress\" style={{width: `${virtueScores.courage}%`}}></div>\r\n                    </div>\r\n                    <span className=\"virtue-score\"><AnimatedCounter end={virtueScores.courage} />%</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"virtue-card temperance scroll-reveal hover-lift\" style={{ animationDelay: '0.2s' }}>\r\n                    <div className=\"virtue-icon\">âš–ï¸</div>\r\n                    <h3 className=\"virtue-name\">Temperance</h3>\r\n                    <p className=\"virtue-greek\">Î£Ï‰Ï†ÏÎ¿ÏƒÏÎ½Î·</p>\r\n                    <div className=\"virtue-bar\">\r\n                      <div className=\"virtue-progress\" style={{width: `${virtueScores.temperance}%`}}></div>\r\n                    </div>\r\n                    <span className=\"virtue-score\"><AnimatedCounter end={virtueScores.temperance} />%</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"virtue-card justice scroll-reveal hover-lift\" style={{ animationDelay: '0.3s' }}>\r\n                    <div className=\"virtue-icon\">âš–ï¸</div>\r\n                    <h3 className=\"virtue-name\">Justice</h3>\r\n                    <p className=\"virtue-greek\">Î”Î¹ÎºÎ±Î¹Î¿ÏƒÏÎ½Î·</p>\r\n                    <div className=\"virtue-bar\">\r\n                      <div className=\"virtue-progress\" style={{width: `${virtueScores.justice}%`}}></div>\r\n                    </div>\r\n                    <span className=\"virtue-score\"><AnimatedCounter end={virtueScores.justice} />%</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* 4. AGORA FOOTPRINT */}\r\n            {activeTab === 'footprint' && (\r\n              <div className=\"footprint-section animated-entrance\">\r\n                <h2 className=\"section-title\">\r\n                  <span className=\"title-icon\">👣</span>\r\n                  Your Agora Footprint\r\n                  <span className=\"subtitle-greek\">Αποτύπωμα στην Αγορά</span>\r\n                </h2>\r\n                \r\n                <div className=\"timeline-wall\">\r\n                  {discussions.slice(0, 5).map((disc, index) => (\r\n                    <div key={disc.id} className=\"timeline-entry carved-stone scroll-reveal\" style={{animationDelay: `${index * 0.15}s`}}>\r\n                      <div className=\"timeline-date\">{formatDate(disc.created_at)}</div>\r\n                      <div className=\"timeline-icon\">📜</div>\r\n                      <div className=\"timeline-content\">\r\n                        <h4 className=\"timeline-title\">{disc.title}</h4>\r\n                        <p className=\"timeline-category\">{disc.category || 'General'}</p>\r\n                        <div className=\"timeline-stats\">\r\n                          <span>💬 {disc.replies || 0}</span>\r\n                          <span>👁️ {disc.views || 0}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  \r\n                  {discussions.length === 0 && (\r\n                    <div className=\"no-footprint\">\r\n                      <p>Your journey in the Agora begins here...</p>\r\n                      <button className=\"start-journey-btn\" onClick={() => navigate('/dashboard')}>\r\n                        Start Your First Discussion\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* 5. THOUGHT JOURNAL */}\r\n            {activeTab === 'journal' && (\r\n              <div className=\"journal-section animated-entrance\">\r\n                <h2 className=\"section-title\">\r\n                  <span className=\"title-icon\">📜</span>\r\n                  Thought Journal\r\n                  <span className=\"subtitle-greek\">Ημερολόγιο Σκέψης</span>\r\n                </h2>\r\n                \r\n                <div className=\"journal-scroll\">\r\n                  <div className=\"scroll-header\">\r\n                    <h3>Private Reflections</h3>\r\n                    <button className=\"publish-scroll-btn\" onClick={handlePublishJournal}>\r\n                      <span className=\"icon\">📯</span> Publish as Scroll\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <textarea \r\n                    className=\"journal-textarea parchment\"\r\n                    placeholder=\"Write your philosophical reflections here... These are your private thoughts unless you choose to publish them as a scroll.\"\r\n                    rows=\"10\"\r\n                    value={currentJournalText}\r\n                    onChange={(e) => setCurrentJournalText(e.target.value)}\r\n                  ></textarea>\r\n                  \r\n                  <div className=\"journal-actions\">\r\n                    <button className=\"save-entry-btn\" onClick={handleSaveJournal}>\r\n                      <span className=\"icon\">💾</span> Save Entry\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  {/* Saved Journal Entries */}\r\n                  {journalEntries.length > 0 && (\r\n                    <div className=\"saved-entries\">\r\n                      <h4>📚 Saved Entries</h4>\r\n                      {journalEntries.slice(0, 5).map(entry => (\r\n                        <div key={entry.id} className=\"journal-entry-card\">\r\n                          <div className=\"entry-date\">{formatDate(entry.date)}</div>\r\n                          <p className=\"entry-text\">{entry.text.substring(0, 150)}...</p>\r\n                          <div className=\"entry-actions\">\r\n                            <button\r\n                              className=\"view-btn\"\r\n                              onClick={() => {\r\n                                setCurrentJournalText(entry.text);\r\n                                setToast({ message: 'Entry loaded for editing', type: 'success' });\r\n                              }}\r\n                            >\r\n                              👁️ View\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"oracle-insights\">\r\n                  <h3 className=\"oracle-title\">\r\n                    <span className=\"icon\">🔮</span> Oracle Insights\r\n                  </h3>\r\n                  <div className=\"insight-card\">\r\n                    <p className=\"insight-text\">\r\n                      \"Your belief trajectory shows a movement from skepticism towards empirical wisdom. \r\n                      Continue engaging with epistemology discussions to deepen your understanding.\"\r\n                    </p>\r\n                    <span className=\"oracle-signature\">â€” The Oracle</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Profile Details - Secondary Info */}\r\n          <div className=\"profile-details secondary-tablets\">\r\n            <div className=\"detail-card tablet\">\r\n              <div className=\"tablet-seal\">🏺</div>\r\n              <h3>Current Belief</h3>\r\n              <p className=\"belief-text carved\">{user.belief || 'Not specified'}</p>\r\n            </div>\r\n\r\n            <div className=\"detail-card tablet\">\r\n              <div className=\"tablet-seal\">📚</div>\r\n              <h3>Areas of Interest</h3>\r\n              <div className=\"categories-list\">\r\n                {(user.categories || []).length > 0 ? (\r\n                  user.categories.map((cat, index) => (\r\n                    <span key={index} className=\"category-tag pottery\">{cat}</span>\r\n                  ))\r\n                ) : (\r\n                  <p className=\"empty-state\">No philosophical domains selected</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"detail-card tablet\">\r\n              <div className=\"tablet-seal\">📊</div>\r\n              <h3>Contribution Stats</h3>\r\n              <div className=\"stats-grid pillars\">\r\n                <div className=\"stat-item pillar\">\r\n                  <div className=\"stat-icon\">🏛️</div>\r\n                  <div className=\"stat-number\">{discussions.length}</div>\r\n                  <div className=\"stat-label\">Discussions</div>\r\n                </div>\r\n                <div className=\"stat-item pillar\">\r\n                  <div className=\"stat-icon\">💬</div>\r\n                  <div className=\"stat-number\">{discussions.reduce((acc, d) => acc + (d.replies || 0), 0)}</div>\r\n                  <div className=\"stat-label\">Replies</div>\r\n                </div>\r\n                <div className=\"stat-item pillar\">\r\n                  <div className=\"stat-icon\">👁️</div>\r\n                  <div className=\"stat-number\">{discussions.reduce((acc, d) => acc + (d.views || 0), 0)}</div>\r\n                  <div className=\"stat-label\">Views</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Mirror Mode Toggle */}\r\n          <div className=\"mirror-mode-section\">\r\n            <button className=\"mirror-mode-btn\">\r\n              <span className=\"icon\">🪞</span>\r\n              <span>Mirror Mode</span>\r\n              <span className=\"tooltip\">Compare your profile with another philosopher</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Belief Modal */}\r\n        {showBeliefModal && (\r\n          <div className=\"modal-overlay\" onClick={() => setShowBeliefModal(false)}>\r\n            <div className=\"modal-content belief-modal\" onClick={(e) => e.stopPropagation()}>\r\n              <div className=\"modal-header\">\r\n                <h2>{editingBelief ? 'âœï¸ Edit Belief' : 'âž• Add New Belief'}</h2>\r\n                <button className=\"modal-close\" onClick={() => setShowBeliefModal(false)}>âœ•</button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"form-group\">\r\n                  <label>Belief / Philosophical Stance</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"modal-input\"\r\n                    placeholder=\"e.g., Stoic, Existentialist, Utilitarian\"\r\n                    value={beliefForm.belief}\r\n                    onChange={(e) => setBeliefForm({...beliefForm, belief: e.target.value})}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Reason / Context</label>\r\n                  <textarea\r\n                    className=\"modal-textarea\"\r\n                    placeholder=\"Why this belief? What influenced this change?\"\r\n                    rows=\"4\"\r\n                    value={beliefForm.reason}\r\n                    onChange={(e) => setBeliefForm({...beliefForm, reason: e.target.value})}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"modal-input\"\r\n                    value={beliefForm.date}\r\n                    onChange={(e) => setBeliefForm({...beliefForm, date: e.target.value})}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"modal-btn cancel-btn\" onClick={() => setShowBeliefModal(false)}>\r\n                  Cancel\r\n                </button>\r\n                <button className=\"modal-btn save-btn\" onClick={handleSaveBelief}>\r\n                  {editingBelief ? 'Update' : 'Add'} Belief\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Philosopher Modal */}\r\n        {selectedPhilosopher && (\r\n          <div className=\"modal-overlay\" onClick={() => setSelectedPhilosopher(null)}>\r\n            <div className=\"modal-content philosopher-modal\" onClick={(e) => e.stopPropagation()}>\r\n              <div className=\"modal-header\">\r\n                <h2>\r\n                  <span className=\"philosopher-icon-large\">{selectedPhilosopher.icon}</span>\r\n                  {selectedPhilosopher.name}\r\n                </h2>\r\n                <button className=\"modal-close\" onClick={() => setSelectedPhilosopher(null)}>âœ•</button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"philosopher-details\">\r\n                  <div className=\"detail-row\">\r\n                    <strong>📅 Lived:</strong> {selectedPhilosopher.dates}\r\n                  </div>\r\n                  <div className=\"detail-row\">\r\n                    <strong>🏛️ School:</strong> {selectedPhilosopher.school}\r\n                  </div>\r\n                  <div className=\"detail-row bio\">\r\n                    <strong>📖 Biography:</strong>\r\n                    <p>{selectedPhilosopher.bio}</p>\r\n                  </div>\r\n                  <div className=\"detail-row\">\r\n                    <strong>💡 Key Ideas:</strong>\r\n                    <ul>\r\n                      {selectedPhilosopher.keyIdeas.map((idea, i) => (\r\n                        <li key={i}>{idea}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"detail-row\">\r\n                    <strong>âœ¨ Influence:</strong>\r\n                    <p>{selectedPhilosopher.influence}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"modal-btn primary-btn\" onClick={() => setSelectedPhilosopher(null)}>\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\n"],"names":["_ref","end","duration","prefix","suffix","className","count","setCount","useState","ref","isVisible","useScrollReveal","once","threshold","hasAnimated","useRef","useEffect","current","startTime","animationFrame","animate","currentTime","progress","Math","min","easeOutQuart","pow","floor","requestAnimationFrame","cancelAnimationFrame","_jsxs","children","toLocaleString","_user$username","navigate","useNavigate","user","setUser","JSON","parse","localStorage","getItem","discussions","setDiscussions","toast","setToast","editMode","setEditMode","activeTab","setActiveTab","editData","setEditData","username","tagline","virtueScores","setVirtueScores","wisdom","courage","temperance","justice","beliefHistory","setBeliefHistory","saved","concat","userId","id","belief","date","reason","showBeliefModal","setShowBeliefModal","editingBelief","setEditingBelief","beliefForm","setBeliefForm","Date","toISOString","split","selectedPhilosopher","setSelectedPhilosopher","journalEntries","setJournalEntries","currentJournalText","setCurrentJournalText","fetchUserDiscussions","async","res","fetch","config","API_URL","data","json","ok","Array","isArray","userDiscussions","filter","disc","user_id","error","console","formatDate","dateString","toLocaleDateString","month","day","year","length","totalReplies","reduce","acc","d","replies","totalViews","views","newScores","prev","stringify","philosophers","socrates","name","icon","dates","school","bio","keyIdeas","influence","plato","aristotle","epicurus","_Fragment","_jsx","Toast","message","type","onClose","ScrollProgress","charAt","toUpperCase","value","onChange","e","_objectSpread","target","placeholder","onClick","handleSaveProfile","updatedUser","setItem","map","item","index","style","animationDelay","handleEditBelief","title","beliefId","window","confirm","updatedHistory","b","handleDeleteBelief","handleAddBelief","categories","Object","keys","key","phil","width","AnimatedCounter","slice","created_at","category","handlePublishJournal","trim","rows","handleSaveJournal","updatedEntries","now","text","published","entry","substring","cat","stopPropagation","handleSaveBelief","newBelief","idea","i"],"sourceRoot":""}